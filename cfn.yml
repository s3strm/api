AWSTemplateFormatVersion: 2010-09-09
Description: The s3strm backend

Parameters:
  URLGeneratorCodeKey:
    Description: The S3 key where the URLGenerator code can be found
    Type: String
  RefeederCodeKey:
    Description: The S3 key where the Refeeder code can be found
    Type: String
  URLMinimumValidity:
    Description: The shortest allowable validity for a URL
    Type: Number
    Default: 14400    # 4 hours

Resources:
  URLGeneratorLambda:
    Type : AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !ImportValue s3strm-settings-bucket
        S3Key: !Ref URLGeneratorCodeKey
      Description: Generate a temporary URL for an IMDB ID
      Environment:
        Variables:
          MOVIES_BUCKET: !ImportValue s3strm-movies-bucket
          URL_MINIMUM_VALIDITY: !Ref URLMinimumValidity
      FunctionName: s3strm-urlgenerator
      Handler: lambda.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python2.7
      Timeout: 120
    DependsOn: Role

  RefeederLambda:
    Type : AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !ImportValue s3strm-settings-bucket
        S3Key: !Ref RefeederCodeKey
      Description: Regenerates metadata for an IMDB ID
      Environment:
        Variables:
          MOVIES_BUCKET: !ImportValue s3strm-movies-bucket
          VIDEO_CREATED_TOPIC: !ImportValue s3strm-video-created-topic
      FunctionName: s3strm-refeeder
      Handler: lambda.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python2.7
      Timeout: 120
    DependsOn: Role

  ApiGatewayStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      # TODO: Add an SSL certificate
      # ClientCertificateId: String
      DeploymentId: !Ref ApiGatewayDeployment
      Description: "Production"
      RestApiId: !Ref ApiGateway
      StageName: prod

  ApiGatewayDeployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      Description: "Production"
      RestApiId: !Ref ApiGateway

  ApiGateway:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Description: s3strm front door
      Name: s3strm

  ApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: "{imdb_id}"
      RestApiId: !Ref ApiGateway

  StreamMethod:
    Type: "AWS::ApiGateway::Method"
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseParameters:
              "method.response.header.location": "integration.response.body.url"
            StatusCode: 302
        Type: AWS
        Uri: !Join [ "", [ "arn:aws:apigateway:", { "Ref": "AWS::Region" }, ":lambda:path", "/2015-03-31/functions/", { "Fn::GetAtt": [ "URLGeneratorLambda", "Arn" ] }, "/invocations" ] ]
      MethodResponses:
        -
          ResponseParameters:
            method.response.header.location: True
          StatusCode: 302
      ResourceId: !Ref ApiResource
      RestApiId: !Ref ApiGateway

  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version : 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "s3strm-backend"
          PolicyDocument:
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"
              -
                Effect: Allow
                Action: "s3:*"
                Resource: !Join [ "", [ "arn:aws:s3:::", !ImportValue s3strm-movies-bucket, "/*" ] ]
              -
                Effect: Allow
                Action: "s3:*"
                Resource: !Join [ "", [ "arn:aws:s3:::", !ImportValue s3strm-settings-bucket, "/*" ] ]

Outputs:
  URLGeneratorLambda:
    Value: !GetAtt URLGeneratorLambda.Arn
